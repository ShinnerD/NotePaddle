<Window
    x:Class="NotePaddle.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:NotePaddle"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="Main"
    Title="NotePaddle"
    Width="786"
    Height="450"
    MinWidth="800"
    MinHeight="450"
    AllowsTransparency="True"
    Background="Transparent"
    Icon="/Images/notebook.png"
    MouseDown="Main_MouseDown"
    ResizeMode="CanResizeWithGrip"
    WindowStyle="None"
    mc:Ignorable="d">

    <Window.Resources>

        <ResourceDictionary>
            <SolidColorBrush x:Key="MainBackground" Color="#FF212529" />
            <SolidColorBrush x:Key="PanelBackground" Color="#343a40" />
            <SolidColorBrush x:Key="MenuTextColor" Color="#FFf8f9fa" />
            <SolidColorBrush x:Key="GreyedText" Color="#ffadb5bd" />
            <SolidColorBrush x:Key="BrightText" Color="#Ffe9ecef" />
            <SolidColorBrush x:Key="MouseOverBG" Color="#FF495057" />
            <SolidColorBrush x:Key="ListHeaderBG" Color="#343a40" />
            <SolidColorBrush x:Key="ListHeaderForeground" Color="#ced4da" />
            <SolidColorBrush x:Key="EditText" Color="#ced4da" />
            <BooleanToVisibilityConverter x:Key="boolToVis" />

            <!--  Menu Button Left Panel Style  -->
            <Style
                x:Key="MenuButtonTheme"
                BasedOn="{StaticResource {x:Type ToggleButton}}"
                TargetType="{x:Type RadioButton}">
                <Style.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="RadioButton">
                                <Grid
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="{TemplateBinding Background}">

                                    <TextBlock
                                        Margin="25,0,0,0"
                                        VerticalAlignment="Center"
                                        FontFamily="/Fonts/#Poppins"
                                        Text="{TemplateBinding Property=Content}" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style.Setters>
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="{StaticResource MouseOverBG}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource MouseOverBG}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--  ListViewItem Alternating Row Style  -->
            <Style x:Key="AlternatingBackground" TargetType="{x:Type ListBoxItem}">
                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter Property="Background" Value="Transparent" />
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="{StaticResource ListHeaderBG}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--  Focus Visual Style for Scrollbar  -->
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle
                                Margin="2"
                                SnapsToDevicePixels="true"
                                Stroke="Transparent"
                                StrokeDashArray="1 2"
                                StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  Colors Used By Scrollbar  -->
            <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="Transparent" />
            <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#343a40" />
            <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#Ffe9ecef" />
            <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#ffadb5bd" />
            <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF" />
            <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#Ffe9ecef" />
            <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="Transparent" />
            <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#343a40" />
            <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#FF495057" />
            <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#FF495057" />
            <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0" />
            <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0" />

            <!--  Scroll Bar Button Styling  -->
            <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Fill="{TemplateBinding Background}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#FF495057" />
            <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#FF495057" />
            <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#343a40" />

            <!--  Scroll Bar Thumb Vertical and Horizontal  -->
            <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Rectangle
                                x:Name="rectangle"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Fill="{StaticResource ScrollBar.Static.Thumb}"
                                SnapsToDevicePixels="True" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                                </Trigger>
                                <Trigger Property="IsDragging" Value="true">
                                    <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Rectangle
                                x:Name="rectangle"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Fill="{StaticResource ScrollBar.Static.Thumb}"
                                SnapsToDevicePixels="True" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                                </Trigger>
                                <Trigger Property="IsDragging" Value="true">
                                    <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  More Colors Used By Scroll Bar  -->
            <SolidColorBrush x:Key="Button.Static.Background" Color="#343a40" />
            <SolidColorBrush x:Key="Button.Static.Border" Color="#343a40" />
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#343a40" />
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#343a40" />
            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF495057" />
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF495057" />
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#343a40" />
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#343a40" />
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#343a40" />

            <!--  Button Styles for the Scroll Bar  -->
            <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border
                                x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted" Value="true">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style
                x:Key="myRepeatButtonStyle"
                BasedOn="{StaticResource BaseButtonStyle}"
                TargetType="{x:Type RepeatButton}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
            </Style>

            <!--  Final Scroll Bar style  -->
            <Style x:Key="myScrollBarStyle" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}" />
                <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="1,0" />
                <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                    <RowDefinition Height="0.00001*" />
                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                </Grid.RowDefinitions>
                                <Border
                                    Grid.Row="1"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                                <RepeatButton
                                    x:Name="PART_LineUpButton"
                                    Command="{x:Static ScrollBar.LineUpCommand}"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Style="{StaticResource myRepeatButtonStyle}">
                                    <Path
                                        x:Name="ArrowTop"
                                        Margin="3,4,3,3"
                                        Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z"
                                        Fill="{StaticResource ScrollBar.Static.Glyph}"
                                        Stretch="Uniform" />
                                </RepeatButton>
                                <Track
                                    x:Name="PART_Track"
                                    Grid.Row="1"
                                    IsDirectionReversed="true"
                                    IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton
                                    x:Name="PART_LineDownButton"
                                    Grid.Row="2"
                                    Command="{x:Static ScrollBar.LineDownCommand}"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Style="{StaticResource myRepeatButtonStyle}">
                                    <Path
                                        x:Name="ArrowBottom"
                                        Margin="3,4,3,3"
                                        Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z"
                                        Fill="{StaticResource ScrollBar.Static.Glyph}"
                                        Stretch="Uniform" />
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                    <Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto" />
                        <Setter Property="MinWidth" Value="0" />
                        <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                        <Setter Property="BorderThickness" Value="0,1" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                            <ColumnDefinition Width="0.00001*" />
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                        </Grid.ColumnDefinitions>
                                        <Border
                                            Grid.Column="1"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}" />
                                        <RepeatButton
                                            x:Name="PART_LineLeftButton"
                                            Command="{x:Static ScrollBar.LineLeftCommand}"
                                            IsEnabled="{TemplateBinding IsMouseOver}"
                                            Style="{StaticResource myRepeatButtonStyle}">
                                            <Path
                                                x:Name="ArrowLeft"
                                                Margin="3"
                                                Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z"
                                                Fill="{StaticResource ScrollBar.Static.Glyph}"
                                                Stretch="Uniform" />
                                        </RepeatButton>
                                        <Track
                                            x:Name="PART_Track"
                                            Grid.Column="1"
                                            IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
                                            </Track.Thumb>
                                        </Track>
                                        <RepeatButton
                                            x:Name="PART_LineRightButton"
                                            Grid.Column="2"
                                            Command="{x:Static ScrollBar.LineRightCommand}"
                                            IsEnabled="{TemplateBinding IsMouseOver}"
                                            Style="{StaticResource myRepeatButtonStyle}">
                                            <Path
                                                x:Name="ArrowRight"
                                                Margin="3"
                                                Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z"
                                                Fill="{StaticResource ScrollBar.Static.Glyph}"
                                                Stretch="Uniform" />
                                        </RepeatButton>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                        </MultiDataTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                            <Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Border
        Background="{StaticResource MainBackground}"
        ClipToBounds="True"
        CornerRadius="10">
        <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--  Contains Top Panel  -->
            <Grid
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="80" />
                </Grid.ColumnDefinitions>
                <StackPanel
                    x:Name="TitlePanel"
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="10,10,0,0"
                    Orientation="Horizontal">
                    <Image
                        Width="30"
                        Height="30"
                        Source="C:\Users\denni\OneDrive\Datamatiker Studie\Code\NotePaddle\Images\notebook.png" />
                    <Label
                        x:Name="TitleLabel"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Content="NotePaddle"
                        FontFamily="Poppins"
                        FontSize="20"
                        Foreground="{StaticResource MenuTextColor}" />
                </StackPanel>
                <Border
                    x:Name="SearchBoxContainer"
                    Grid.Row="0"
                    Grid.Column="1"
                    Width="550"
                    Height="30"
                    Margin="10,10,0,10"
                    HorizontalAlignment="Left"
                    Background="{StaticResource PanelBackground}"
                    CornerRadius="10">
                    <Grid>
                        <Rectangle StrokeThickness="1" />
                        <TextBox
                            x:Name="SearchBox"
                            Margin="1"
                            Padding="5"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            BorderThickness="0"
                            Foreground="{StaticResource BrightText}"
                            KeyUp="SearchBox_KeyUp"
                            Text="" />

                        <TextBlock
                            Grid.Column="1"
                            Margin="10,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            FontSize="11"
                            Foreground="{StaticResource GreyedText}"
                            IsHitTestVisible="False"
                            Text="Search by title and content...">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=SearchBox}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Visibility" Value="Hidden" />
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </Border>
                <StackPanel
                    Grid.Column="2"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
                    <Button
                        x:Name="MinimizeButton"
                        Width="30"
                        Height="30"
                        Margin="0,0,5,0"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Click="MinimizeButton_Click">
                        <Image Source="/Images/plain-arrow.png" />
                    </Button>
                    <Button
                        Width="30"
                        Height="30"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Click="Button_Click">
                        <Image Source="/Images/cancel.png" />
                    </Button>
                </StackPanel>
            </Grid>

            <!--  Contain Menu Buttons  -->
            <DockPanel
                Grid.Row="1"
                Grid.Column="0"
                Height="399"
                HorizontalAlignment="Stretch"
                LastChildFill="False">
                <StackPanel DockPanel.Dock="Top">
                    <RadioButton
                        x:Name="ViewNotesButton"
                        Height="50"
                        Margin="0,20,0,0"
                        HorizontalContentAlignment="Stretch"
                        Checked="ViewNotesButton_Checked"
                        Content="View Notes"
                        FontFamily="Poppins"
                        FontSize="14"
                        Foreground="{StaticResource MenuTextColor}"
                        GroupName="MenuButtons"
                        IsChecked="False"
                        Style="{StaticResource MenuButtonTheme}" />
                    <!--<RadioButton
                    Content="Edit"
                    FontFamily="Poppins"
                    FontSize="14"
                    Height="50"
                    Margin="25,0,0,0"
                        GroupName="MenuButtons"
                    HorizontalContentAlignment="Stretch"
                    Foreground="{StaticResource MenuTextColor}"
                    Style="{StaticResource MenuButtonTheme}"
                    Visibility="{Binding ElementName=NoteListBox, Path=HasItems, Converter={StaticResource boolToVis}}" />-->
                    <RadioButton
                        x:Name="NewButton"
                        Height="50"
                        HorizontalContentAlignment="Stretch"
                        Checked="NewButton_Checked"
                        Content="New"
                        FontFamily="Poppins"
                        FontSize="14"
                        Foreground="{StaticResource MenuTextColor}"
                        GroupName="MenuButtons"
                        Style="{StaticResource MenuButtonTheme}" />
                </StackPanel>

                <StackPanel DockPanel.Dock="Bottom">
                    <RadioButton
                        x:Name="SaveButton"
                        Height="50"
                        HorizontalContentAlignment="Stretch"
                        Click="SaveButton_Click"
                        Content="Save"
                        FontFamily="Poppins"
                        FontSize="14"
                        Foreground="{StaticResource MenuTextColor}"
                        GroupName="MenuButtons"
                        Style="{StaticResource MenuButtonTheme}" />
                    <RadioButton
                        x:Name="DeleteButton"
                        Height="50"
                        HorizontalContentAlignment="Stretch"
                        Click="DeleteButton_Click"
                        Content="Delete"
                        FontFamily="Poppins"
                        FontSize="14"
                        Foreground="{StaticResource MenuTextColor}"
                        GroupName="MenuButtons"
                        Style="{StaticResource MenuButtonTheme}" />
                </StackPanel>
            </DockPanel>

            <Grid
                x:Name="MainContentGrid"
                Grid.Row="1"
                Grid.Column="1">

                <!--Error Message Textblock-->
                <TextBlock x:Name="ErrorMessageBox"
                           FontFamily="Poppins"
                           Foreground="{StaticResource BrightText}"
                           FontSize="20"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Visibility="Collapsed"
                           Text="This is an error message.." />

                <!--  Panel View Notes ListBox  -->
                <DockPanel
                    x:Name="NoteListViewPanel"
                    Margin="10,0,0,0"
                    Visibility="Collapsed">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2.4*" SharedSizeGroup="Column1" />
                            <ColumnDefinition SharedSizeGroup="Column2" />
                            <ColumnDefinition SharedSizeGroup="Column3" />
                        </Grid.ColumnDefinitions>
                        <StackPanel
                            Grid.Row="0"
                            Grid.Column="0"
                            Grid.ColumnSpan="3"
                            Height="25"
                            Margin="5,5,5,0"
                            HorizontalAlignment="Left"
                            Orientation="Horizontal">
                            <Border
                                Width="300"
                                Margin="0,0,45,0"
                                Background="{StaticResource ListHeaderBG}"
                                CornerRadius="5">
                                <Label
                                    Content="Title"
                                    FontFamily="Poppins"
                                    FontSize="14"
                                    Foreground="{StaticResource ListHeaderForeground}" />
                            </Border>
                            <Border
                                Width="100"
                                Margin="0,0,70,0"
                                Background="{StaticResource ListHeaderBG}"
                                CornerRadius="5">
                                <Label
                                    Content="Last Edit"
                                    FontFamily="Poppins"
                                    FontSize="14"
                                    Foreground="{StaticResource ListHeaderForeground}" />
                            </Border>
                            <Border
                                Width="105"
                                Margin="0,0,0,0"
                                Background="{StaticResource ListHeaderBG}"
                                CornerRadius="5">
                                <Label
                                    Content="Created On"
                                    FontFamily="Poppins"
                                    FontSize="14"
                                    Foreground="{StaticResource ListHeaderForeground}" />
                            </Border>
                        </StackPanel>
                        <ListBox
                            x:Name="NoteListBox"
                            Grid.Row="1"
                            Grid.Column="0"
                            Grid.ColumnSpan="3"
                            d:ItemsSource="{d:SampleData ItemCount=5}"
                            AlternationCount="2"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            FontFamily="Poppins"
                            FontSize="14"
                            Foreground="{StaticResource GreyedText}"
                            ItemContainerStyle="{StaticResource AlternatingBackground}"
                            ItemsSource="{Binding FilteredNoteList}"
                            SelectedIndex="0"
                            SelectionChanged="NoteListBox_SelectionChanged">
                            <ListBox.Resources>
                                <Style BasedOn="{StaticResource myScrollBarStyle}" TargetType="ScrollBar" />
                            </ListBox.Resources>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid MouseDown="Grid_MouseDown">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="345" SharedSizeGroup="Column1" />
                                            <ColumnDefinition Width="170" SharedSizeGroup="Column2" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column3" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
                                            Grid.Column="0"
                                            Margin="5,0,0,0"
                                            Text="{Binding Title}" />
                                        <TextBlock Grid.Column="1" Text="{Binding LastEdited, StringFormat={}{0: dd.MM.yy HH:mm}}" />
                                        <TextBlock Grid.Column="2" Text="{Binding CreatedDate, StringFormat={}{0: dd.MM.yy HH:mm}}" />
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </DockPanel>

                <!--  StackPanel Edit Note  -->
                <DockPanel
                    x:Name="EditPanel"
                    Width="{Binding ActualWidth, ElementName=MainContentGrid, Mode=OneWay}"
                    Height="{Binding ActualHeight, ElementName=MainContentGrid, Mode=OneWay}"
                    Visibility="Collapsed">
                    <Border
                        Grid.Row="0"
                        Grid.Column="1"
                        Width="550"
                        Height="30"
                        Margin="10,15,0,5"
                        HorizontalAlignment="Left"
                        Background="{StaticResource PanelBackground}"
                        CornerRadius="10"
                        DockPanel.Dock="Top">
                        <Grid>
                            <Rectangle StrokeThickness="1" />
                            <TextBox
                                x:Name="titleInputBox"
                                Margin="1"
                                Padding="5"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                BorderThickness="0"
                                FontFamily="Poppins"
                                FontSize="12"
                                Foreground="{StaticResource EditText}"
                                MaxLength="50"
                                MaxLines="1"
                                Text="{Binding WorkingNote.Title}" />

                            <TextBlock
                                Grid.Column="1"
                                Margin="10,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontFamily="Poppins"
                                FontSize="12"
                                Foreground="{StaticResource GreyedText}"
                                IsHitTestVisible="False"
                                Text="Title...">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=titleInputBox}" Value="">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>

                    <Grid DockPanel.Dock="Left">
                        <Border
                            Margin="10,0,5,5"
                            Background="{StaticResource PanelBackground}"
                            CornerRadius="5">
                            <Grid x:Name="grid">
                                <TextBox
                                    x:Name="contentInputBox"
                                    Width="{Binding ActualWidth, ElementName=grid, Mode=OneWay}"
                                    Height="{Binding ActualHeight, ElementName=grid, Mode=OneWay}"
                                    Padding="5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    AcceptsReturn="True"
                                    AcceptsTab="True"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    FontSize="12"
                                    Foreground="{StaticResource EditText}"
                                    Text="{Binding WorkingNote.Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                <TextBlock
                                    Grid.Column="1"
                                    Margin="10,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    FontFamily="Poppins"
                                    FontSize="12"
                                    Foreground="{StaticResource GreyedText}"
                                    IsHitTestVisible="False"
                                    Text="Content...">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, ElementName=contentInputBox}" Value="">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Border>
                    </Grid>
                </DockPanel>
            </Grid>
        </Grid>
    </Border>
</Window>